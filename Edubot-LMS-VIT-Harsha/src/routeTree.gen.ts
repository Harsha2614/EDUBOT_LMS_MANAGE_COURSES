/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as UsersIndexImport } from './routes/users/index'
import { Route as UsersAddImport } from './routes/users/add'
import { Route as UsersUserIdImport } from './routes/users/$userId'
import { Route as ManageCoursesCloneImport } from './routes/manage-courses/Clone'
import { Route as ManageCoursesAddCourseImport } from './routes/manage-courses/AddCourse'
import { Route as ManageCoursesAddAddMaterialsImport } from './routes/manage-courses/Add/AddMaterials'

// Create/Update Routes

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const UsersIndexRoute = UsersIndexImport.update({
  id: '/users/',
  path: '/users/',
  getParentRoute: () => rootRoute,
} as any)

const UsersAddRoute = UsersAddImport.update({
  id: '/users/add',
  path: '/users/add',
  getParentRoute: () => rootRoute,
} as any)

const UsersUserIdRoute = UsersUserIdImport.update({
  id: '/users/$userId',
  path: '/users/$userId',
  getParentRoute: () => rootRoute,
} as any)

const ManageCoursesCloneRoute = ManageCoursesCloneImport.update({
  id: '/manage-courses/Clone',
  path: '/manage-courses/Clone',
  getParentRoute: () => rootRoute,
} as any)

const ManageCoursesAddCourseRoute = ManageCoursesAddCourseImport.update({
  id: '/manage-courses/AddCourse',
  path: '/manage-courses/AddCourse',
  getParentRoute: () => rootRoute,
} as any)

const ManageCoursesAddAddMaterialsRoute =
  ManageCoursesAddAddMaterialsImport.update({
    id: '/manage-courses/Add/AddMaterials',
    path: '/manage-courses/Add/AddMaterials',
    getParentRoute: () => rootRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/manage-courses/AddCourse': {
      id: '/manage-courses/AddCourse'
      path: '/manage-courses/AddCourse'
      fullPath: '/manage-courses/AddCourse'
      preLoaderRoute: typeof ManageCoursesAddCourseImport
      parentRoute: typeof rootRoute
    }
    '/manage-courses/Clone': {
      id: '/manage-courses/Clone'
      path: '/manage-courses/Clone'
      fullPath: '/manage-courses/Clone'
      preLoaderRoute: typeof ManageCoursesCloneImport
      parentRoute: typeof rootRoute
    }
    '/users/$userId': {
      id: '/users/$userId'
      path: '/users/$userId'
      fullPath: '/users/$userId'
      preLoaderRoute: typeof UsersUserIdImport
      parentRoute: typeof rootRoute
    }
    '/users/add': {
      id: '/users/add'
      path: '/users/add'
      fullPath: '/users/add'
      preLoaderRoute: typeof UsersAddImport
      parentRoute: typeof rootRoute
    }
    '/users/': {
      id: '/users/'
      path: '/users'
      fullPath: '/users'
      preLoaderRoute: typeof UsersIndexImport
      parentRoute: typeof rootRoute
    }
    '/manage-courses/Add/AddMaterials': {
      id: '/manage-courses/Add/AddMaterials'
      path: '/manage-courses/Add/AddMaterials'
      fullPath: '/manage-courses/Add/AddMaterials'
      preLoaderRoute: typeof ManageCoursesAddAddMaterialsImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/manage-courses/AddCourse': typeof ManageCoursesAddCourseRoute
  '/manage-courses/Clone': typeof ManageCoursesCloneRoute
  '/users/$userId': typeof UsersUserIdRoute
  '/users/add': typeof UsersAddRoute
  '/users': typeof UsersIndexRoute
  '/manage-courses/Add/AddMaterials': typeof ManageCoursesAddAddMaterialsRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/manage-courses/AddCourse': typeof ManageCoursesAddCourseRoute
  '/manage-courses/Clone': typeof ManageCoursesCloneRoute
  '/users/$userId': typeof UsersUserIdRoute
  '/users/add': typeof UsersAddRoute
  '/users': typeof UsersIndexRoute
  '/manage-courses/Add/AddMaterials': typeof ManageCoursesAddAddMaterialsRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/manage-courses/AddCourse': typeof ManageCoursesAddCourseRoute
  '/manage-courses/Clone': typeof ManageCoursesCloneRoute
  '/users/$userId': typeof UsersUserIdRoute
  '/users/add': typeof UsersAddRoute
  '/users/': typeof UsersIndexRoute
  '/manage-courses/Add/AddMaterials': typeof ManageCoursesAddAddMaterialsRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/manage-courses/AddCourse'
    | '/manage-courses/Clone'
    | '/users/$userId'
    | '/users/add'
    | '/users'
    | '/manage-courses/Add/AddMaterials'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/manage-courses/AddCourse'
    | '/manage-courses/Clone'
    | '/users/$userId'
    | '/users/add'
    | '/users'
    | '/manage-courses/Add/AddMaterials'
  id:
    | '__root__'
    | '/'
    | '/manage-courses/AddCourse'
    | '/manage-courses/Clone'
    | '/users/$userId'
    | '/users/add'
    | '/users/'
    | '/manage-courses/Add/AddMaterials'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ManageCoursesAddCourseRoute: typeof ManageCoursesAddCourseRoute
  ManageCoursesCloneRoute: typeof ManageCoursesCloneRoute
  UsersUserIdRoute: typeof UsersUserIdRoute
  UsersAddRoute: typeof UsersAddRoute
  UsersIndexRoute: typeof UsersIndexRoute
  ManageCoursesAddAddMaterialsRoute: typeof ManageCoursesAddAddMaterialsRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ManageCoursesAddCourseRoute: ManageCoursesAddCourseRoute,
  ManageCoursesCloneRoute: ManageCoursesCloneRoute,
  UsersUserIdRoute: UsersUserIdRoute,
  UsersAddRoute: UsersAddRoute,
  UsersIndexRoute: UsersIndexRoute,
  ManageCoursesAddAddMaterialsRoute: ManageCoursesAddAddMaterialsRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/manage-courses/AddCourse",
        "/manage-courses/Clone",
        "/users/$userId",
        "/users/add",
        "/users/",
        "/manage-courses/Add/AddMaterials"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/manage-courses/AddCourse": {
      "filePath": "manage-courses/AddCourse.tsx"
    },
    "/manage-courses/Clone": {
      "filePath": "manage-courses/Clone.tsx"
    },
    "/users/$userId": {
      "filePath": "users/$userId.tsx"
    },
    "/users/add": {
      "filePath": "users/add.tsx"
    },
    "/users/": {
      "filePath": "users/index.tsx"
    },
    "/manage-courses/Add/AddMaterials": {
      "filePath": "manage-courses/Add/AddMaterials.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
